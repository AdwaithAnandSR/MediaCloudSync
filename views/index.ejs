<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= title %></title>
  <link rel="stylesheet" href="css/index.css" type="text/css" media="all" />
</head>
<body>
  <h1><%= title %></h1>
  
  <div id="status">
      
  </div>
  
  
  <div id="box">
      <h2>Video URL</h2>
      <input id="videoUrl" type="url" placeholder="video url..." />
      <button onclick="handleDownloadVideo()">Process Video</button>
  </div>
  <div id="box">
      <h2>Playlist URL</h2>
      <input id="playlistUrl" placeholder="Playlist url..." />
      <input id="pskip" value="0" type="number" />
      <input id="plimit" value="10" type="number" />
      <button id="playlistDownload">Process Playlist</button>
  </div>
  <div id="box">
      <h2>Channel URL</h2>
      <input id="channelUrl" placeholder="Channel url..." />
      <input id="cskip" value="0" type="number" />
      <input id="climit" value="10" type="number" />
      <button onclick="handleDownloadChannel()">Process Channel</button>
  </div>
  
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const api = "<%=API%>";
        const statusDiv = document.getElementById("status");

        const handleDownloadVideo = async () => {
            const url = document.getElementById("videoUrl").value.toString();
            axios.post(`${api}/processVideo`, { url });
        };
        
        const handleDownloadChannel = async () => {
            const channelId = document.getElementById("channelUrl").value.toString();
            const skip = parseInt(document.getElementById("cskip").value);
            const limit = parseInt(document.getElementById("climit").value);
            axios.post(`${api}/processChannel`, { channelId, skip, limit });
        };
      
        const renderStatus = (statusList) => {
            statusDiv.innerHTML = '';
            statusList.forEach(item => {
                const div = document.createElement("div");
                div.className = "box";
                div.id = item.id;
                
                
                
                const pid = document.createElement("h3");
                pid.innerText = `processId: ${item.id}`;
                div.append(pid);

                const url = document.createElement("h3");
                url.innerText = item.type === "channel" ? `channelId: ${item.channelId}` : `url: ${item.url}`;
                div.append(url);
                
                const title = document.createElement("h2");
                title.innerText = `title: ${item.title || 'fetching...'}`;
                div.append(title);

                const currentStatus = document.createElement("h2");
                currentStatus.innerText = `current status: ${item.currentStatus}`;
                div.append(currentStatus);

                if (item.type === "channel") {
                    const skip = document.createElement("h3");
                    skip.innerText = `skip: ${item.skip}`;
                    div.append(skip);

                    const limit = document.createElement("h3");
                    limit.innerText = `limit: ${item.limit}`;
                    div.append(limit);
                    
                    const processed = document.createElement("h3");
                    processed.innerText = `Process: ${item.currentProcessing}/${item.limit}`;
                    div.append(processed);

                    const successCount = document.createElement("h3");
                    successCount.innerText = `Success: ${item.successCount}`;
                    div.append(successCount);

                    const failCount = document.createElement("h3");
                    failCount.innerText = `Failed: ${item.failCount}`;
                    div.append(failCount);

                    const skipCount = document.createElement("h3");
                    skipCount.innerText = `Skipped: ${item.skipCount}`;
                    div.append(skipCount);
                    
                    const progress = document.createElement("progress");
                    progress.id = item.id
                    progress.max = "100"
                    progress.value = item.progress
                    div.append(progress)
                }

                // Set border color based on status
                let borderColor = "#fbc315"; // PROCESSING
                if (item.status === "SUCCESS" || item.status === "COMPLETED") borderColor = "#26ec40";
                if (item.status === "FAIL") borderColor = "red";
                if (item.status === "EXIST" || item.status === "SKIPPED") borderColor = "blue";
                div.style.border = `8px solid ${borderColor}`;
                
                statusDiv.append(div);
            });
        };
      
        const getStatus = async () => {
            try {
                const res = await axios.get(`${api}/status`);
                const statusList = res?.data?.status || [];
                renderStatus(statusList);
            } catch (err) {
                console.error("Failed to fetch status:", err);
            }
        };
          
        setInterval(() => {
            getStatus();
        }, 1000); 
    </script>
  
</body>
</html>
